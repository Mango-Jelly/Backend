package com.mangojelly.backend.domain.movie;

import com.mangojelly.backend.domain.member.Member;
<<<<<<< HEAD
=======
import com.mangojelly.backend.domain.script.Script;
>>>>>>> 5794ac45607376bb8aa3007bc94fe0c6603e58a3
import com.mangojelly.backend.global.error.ErrorCode;
import com.mangojelly.backend.global.error.exception.BusinessException;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@RequiredArgsConstructor
@Transactional(readOnly = true)
@Service
public class MovieService {
    private final MovieRepository movieRepository;
    private final MovieMapper movieMapper;

    public List<Movie> findAllMovies() {
        return movieRepository.findTop6ByVisibleIsTrueOrderByCreateAt();
    }

<<<<<<< HEAD
    public List<Movie> findAllMyMovies(Member member) {
        return movieRepository.findAllByMember(member);
    }

    public Movie findOneMovie(int memberId, int movieId) {
        if(movieRepository.findById(movieId).get().getMember().getId() != memberId)
            throw BusinessException.of(ErrorCode.API_ERROR_MOVIE_NOT_EXIST);
        return movieRepository.findMovie(memberId, movieId);
=======
    @Transactional
    public Movie save(Member member, Script script, boolean visible, String address, String dpt, String party, String title){
        return movieRepository.save(movieMapper.toEntity(member, script, address, title, party, dpt, visible));
>>>>>>> 5794ac45607376bb8aa3007bc94fe0c6603e58a3
    }
}
